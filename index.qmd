---
title: "projeto_soja"
format: 
  html:
    theme: 
      light: sandstone
      dark: cyborg
    css: styles.css
    toc: true
---

## Carregame**nto dos pacotes**

```{r}
library(knitr)
library(ggplot2)
library(gsheet)
library(ggthemes)
library(tidyverse)
library(drc)
library(kableExtra)
library(DT)
library(leaflet)
```

## **Localização dos Experimentos**

```{r}
## plot do viveiro 
leaflet() |>
  addTiles() |> 
  setView(lng = -42.8497 , lat = -20.7453, zoom = 16) 
```

## **Importação os dados - Germinação de Uredósporos (GU)**

Os dados utilizados nesta análise serão importados de uma planilha google sheet. Após importação, algumas colunas de dados serão transformados para fatores. O intuito é facilitar o desenvolvimento das análises.

```{r}
GU <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1zEsVt_nnmydEUBJjkyMrOLHEu6pXeM-SmwTXyEoNbmg/edit?gid=0#gid=0")

GU <- GU %>% 
  mutate(REPETICAO = as.factor(REPETICAO))

head(GU)

```

## **Cálculo da Germinação Média**

```{r}
GU2 <- GU %>% 
  group_by(DOSE) %>%
  summarise(mean_germ = mean(TAXA_DE_GERMINAÇÃO))%>% 
  dplyr::mutate(inib = ((70.90-mean_germ)/70.90)*100) %>% 
  round(digits = 2)

head(GU2)
```

## **Modelagem da EC~50~ (modelo não-linear)**

Para calcular a dose do produto que é capaz de inibir 50% da germinação dos uredósporos do patógeno faremos uso da função `drm` (pacote **`drc`**) modelando para em Log-logistico W1.4.

```{r}
EC <- drm(mean_germ ~ DOSE,
                 data = GU2,
                 fct = W1.4())
summary(EC)
```

```{r}
EC 
```

```{r}
AIC(EC)
```

## **Cálculo da EC~50~**

```{r}
ED(EC, 50, interval = "delta")
```

Com base no modelo gerado anteriormente e na função `ED`, foi possível estimar que a dose do produto suficiente para inibir 50% da inibição dos uredósporos é de 1.99.

## **Tabela de Resultados**

```{r}
colnames(GU2) = c('Dose', "Germinação Média (%)", "Inibição da Germinação (%)")

kable(GU2,
      align = "ccc")
```

## **Gráfico de Dose ✕ Germinação**

```{r}
plot(EC,
     xlab = Dose~(ml~L^-1),
     ylab = "Germinação média (%)",
     xt = c("0", "2.50", "3.75", "5", "7.5", "10"),
     ylim = c(0,100),
     pch = 19,     
     col = "grey20")
```

# **Parâmetros Epidemiológicos**

## **Carregamento dos pacotes**

```{r}
library(gsheet) 
library(tidyverse) 
library(DT) 
library(patchwork) 
library(performance) 
library(emmeans)
library(DHARMa)
library(multcomp) 
library(multcompView) 
library(epifitter)
library(knitr)
library(kableExtra)
library(ggplot2)
```

# **Área Abaixo da Curva de Progresso da Doença**

### **Importação dos dados - Progresso Temporal da Doença (PTD)**

Os dados utilizados nesta análise serão importados de uma planilha google sheet.

```{r}
PTD <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1zEsVt_nnmydEUBJjkyMrOLHEu6pXeM-SmwTXyEoNbmg/edit?gid=1680501439#gid=1680501439")

PTD <- PTD |> 
  mutate(SEVERIDADE = as.numeric(str_replace(SEVERIDADE, ",", ".")) / 100)

## Mudando os dados de percentagem para proporção
PTD = PTD |> 
  mutate(SEVERIDADE = SEVERIDADE/100)

## Mudando o nome dos tratamentos 
TRATAMENTO <- c("Control", "3 x F", "3 x IRStimulus","F, IRStimulus, IRStimulus", "IRStimulus, F, IRStimulus", "IRStimulus+F, F,F"  )
names(TRATAMENTO) <- c("1", "2", "3", "4", "5", "6") # Mapeando números para nomes de tratamentos

# Atualizar a variável tratamento no data frame
PTD$TRATAMENTO <- factor(PTD$TRATAMENTO, levels = names(TRATAMENTO), labels = TRATAMENTO)

```

### **Preparando os dados para análise**

Após importação os dados serão manipulados para obtermos a severidade média por experimento, tratamento e tempo.

```{r}
PTD_2 <- PTD %>%
  group_by(REPETIÇÃO, TRATAMENTO, DAE) %>% 
  summarise(sev_mean = mean(SEVERIDADE)) %>% 
  mutate(REPETIÇÃO = as.factor(REPETIÇÃO),
         TRATAMENTO = as.factor(TRATAMENTO),
         DAE = as.numeric (DAE))

head(PTD_2)
```

### **Cálculo da área abaixo da curva de progresso da doença**

Para calcular a área abaixo da curva de progresso da doença (AACPD), utilizaremos a função `audpc` (**`epifitter`**). Com essa função, manipularemos os dados de modo que, ao final, tenhamos um valor de AACPD para cada ensaio, bloco e tratamento.

```{r}
PTD_3 <- PTD %>%
  dplyr::group_by (REPETIÇÃO, TRATAMENTO, BLOCO) %>% 
  summarise(audpc = AUDPC(DAE, SEVERIDADE)) %>% 
  dplyr::mutate(REPETIÇÃO = as.factor(REPETIÇÃO),
                TRATAMENTO = as.factor(TRATAMENTO),
                BLOCO = as.factor(BLOCO))
```

```{r}
head(PTD_3)
```

### **Visualização Gráfica**

```{r}
library(ggplot2)

# Define o tema padrão como theme_minimal() com tamanho de fonte 10
theme_set(theme_minimal(base_size = 10))

# Gráfico com personalizações
PTD_3 %>% 
  ggplot(aes(TRATAMENTO, audpc)) +
  geom_jitter(
    width = 0.3, 
    alpha = 0.6, 
    colour = "darkred", 
    size = 2
  ) +
  stat_summary(
    fun.data = "mean_cl_boot", 
    color = "black"
  ) +
  labs(
    x = "Tratamentos",
    y = "AACPD"
  ) +
  theme(
    # Ajustes específicos dos eixos
    axis.title.y = element_text(vjust = +3),
    axis.title.x = element_text(vjust = -1),
    axis.text.x = element_text(angle = 45, hjust = 1),
    
    # Melhorias visuais adicionais (opcional)
    panel.grid.major.x = element_blank(),  # Remove linhas de grade verticais
    strip.background = element_rect(fill = "gray90"),  # Fundo dos facets
    strip.text = element_text(face = "bold")  # Texto dos facets em negrito
  ) +
  facet_wrap(
    ~ REPETIÇÃO, 
    labeller = labeller(
      REPETIÇÃO = c(
        "1" = "Experimento 1",
        "2" = "Experimento 2"
      )
    )
  )
```

### **Determinação do modelo**

Para definir se é possível ou não realizar a análise da varíavel AACPD (audpc) combinando os resultados dos ensaios, será feita uma análise de variância (ANOVA) considerando o experimento (ensaio) como um fator.

```{r}
PTD_AUDPC <- lm(audpc ~ TRATAMENTO*REPETIÇÃO + BLOCO,
                data = PTD_3)
```

```{r}
anova(PTD_AUDPC)
```

Pela análise de variância, considerando o experimento (ensaio) como um fator, observamos que há interação entre fatores (TRATAMENTO:EXPERIMENTO, valor de probabilidade \< 0.05), logo não será possível analisar a área abaixo da curva de progresso da doença (AACPD - audpc) em conjunto, sendo necessário avaliação dos experimentos individualmente.

### **Cálculo da AACPD por experimento**

#### Modelo para análise - AACPD, experimento 1

```{r}
PTD_E1 <- PTD_3 %>% 
  filter(REPETIÇÃO == 1)
```

```{r}
PTD_AUDPC_1 <- lm(audpc ~ TRATAMENTO + BLOCO,
                data = PTD_E1)
```

```{r}
check_normality(PTD_AUDPC_1)
```

```{r}
check_heteroscedasticity(PTD_AUDPC_1)
```

Pelo fato de não haver homogeneidade de variâncias entre os grupos, será preciso transformar os dados. Uma alternativa será definir um modelo com o logaritmo da audpc.

##### Modelo transformado e nova avaliação das premissas

```{r}
PTD_AUDPC_1_log <- lm(log(audpc) ~ TRATAMENTO + BLOCO,
                data = PTD_E1)
```

```{r}
check_normality(PTD_AUDPC_1_log)
```

```{r}
check_heteroscedasticity(PTD_AUDPC_1_log)
```

```{r}
plot(simulateResiduals(PTD_AUDPC_1_log))
```

Pelos resultados obtidos para as análises de normalidade e homocedasticidade, observamos que os dados atendem às pressuposições da ANOVA. Portanto, não serão necessárias transformações. Assim, podemos prosseguir a análise.

##### ANOVA

```{r}
anova(PTD_AUDPC_1_log)
```

##### Comparação de médias

```{r}
medias_PTD_AUDPC_1 <- emmeans(PTD_AUDPC_1_log, ~ TRATAMENTO, type = "response")
medias_PTD_AUDPC_1
```

```{r}
cld(medias_PTD_AUDPC_1,
    Letters = LETTERS)
```

##### Coeficiente de Variação (CV)

```{r}
CV_AUDPC_1 <- agricolae::cv.model(PTD_AUDPC_1) %>% 
  round(digits = 2)
CV_AUDPC_1
```

#### Modelo para análise - AACPD, experimento 2

```{r}
PTD_E2 <- PTD_3 %>% 
  filter(REPETIÇÃO == 2)
```

```{r}
PTD_AUDPC_2 <- lm(audpc ~ TRATAMENTO + BLOCO,
                data = PTD_E2)
```

##### Avaliação das premissas

```{r}
check_normality(PTD_AUDPC_2)
```

```{r}
check_heteroscedasticity(PTD_AUDPC_2)
```

```{r}
plot(simulateResiduals(PTD_AUDPC_2))
```

##### ANOVA

```{r}
anova(PTD_AUDPC_2)
```

##### Comparação de médias

```{r}
medias_PTD_AUDPC_2 <- emmeans(PTD_AUDPC_2, ~ TRATAMENTO, type = "response")
medias_PTD_AUDPC_2
```

```{r}
cld(medias_PTD_AUDPC_2,
    Letters = LETTERS)
```

##### Coeficiente de Variação (CV)

```{r}
CV_AUDPC_2 <- agricolae::cv.model(PTD_AUDPC_2) %>% 
  round(digits = 2)
CV_AUDPC_2
```

#### Tabela da área abaixo da curva de progresso da doença (AACPD)

```{r}
cld_AA1 <- cld(medias_PTD_AUDPC_1,
    Letters = LETTERS)

cld_AA2 <- cld(medias_PTD_AUDPC_2,
    Letters = LETTERS)


table_AA_1 <- cld_AA1 %>% 
  dplyr::select(TRATAMENTO, response, .group) %>% 
  dplyr::arrange(TRATAMENTO) %>% 
  mutate(response = round(response, 2))

table_AA_2 <- cld_AA2 %>% 
  dplyr::select(TRATAMENTO, emmean, .group)%>% 
  dplyr::arrange(TRATAMENTO) %>% 
  dplyr::mutate(TRATAMENTO = NULL) %>% 
  mutate(emmean = round(emmean, 2))


linha_CV <- c('CV',CV_AUDPC_1,' ',CV_AUDPC_2,' ')

combined_table_aa <- cbind(table_AA_1, table_AA_2)
combined_table_aa2 <- rbind(combined_table_aa, linha_CV)

colnames(combined_table_aa2) <- c('Tratamento', 'Média', 'Grupo', 'Média', 'Grupo')

opts <- options(knitr.kable.NA = "CV (%)")

knitr::kable(
    combined_table_aa2,
    align = "cccccc",
    row.names=FALSE,
    booktabs = TRUE, valign = 't') %>%
  add_header_above(c(" " = 1, "Ensaio 1" = 2, "Ensaio 2" = 2)) %>% 
  add_header_above(c("Área Abaixo da Curva de Progresso da Doença" = 5))
```
